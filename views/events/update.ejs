<div class="container-fluid py-4">
    <h1>Modifier un événement</h1>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <form id="update-event-form" action="/events/<%= event.id %>" method="PUT">
                        <div class="mb-3">
                            <label for="nameDestination" class="form-label">Nom de la destination</label>
                            <input type="text" class="form-control" id="nameDestination" name="nameDestination" value="<%= event.nameDestination %>" placeholder="Entrez le nom de la destination">
                        </div>
                        <div class="mb-3">
    <label for="dateOfDeparture" class="form-label">Date of Departure</label>
    <!-- Utilisez le champ "value" pour afficher la date de départ actuelle dans le format correct -->
    <input type="datetime-local" class="form-control" id="dateOfDeparture" name="dateOfDeparture" value="<%= event.Dateofdeparture ? event.Dateofdeparture.toISOString().slice(0, 16) : '' %>">
</div>
                        <div class="mb-3">
                            <label for="prix" class="form-label">Prix</label>
                            <input type="text" class="form-control" id="prix" name="prix" value="<%= event.prix %>" placeholder="Entrez le prix de l'événement">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="description" placeholder="Entrez la description de l'événement"><%= event.description %></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="maximumNumberOfplaces" class="form-label">Nombre maximum de places</label>
                            <input type="text" class="form-control" id="maximumNumberOfplaces" name="maximumNumberOfplaces" value="<%= event.maximumNumberOfplaces %>" placeholder="Entrez le nombre maximum de places disponibles">
                        </div>
                        
                        <button type="submit" class="btn btn-primary">Modifier l'événement</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <!-- Le reste du code de la modal... -->
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.7/dist/sweetalert2.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.7/dist/sweetalert2.min.css">

<script>
    async function updateEvent(event) {
        event.preventDefault();

        const form = event.target;
        const nameDestination = form.nameDestination.value;
        const Dateofdeparture = form.dateOfDeparture.value;
        const prix = form.prix.value;
        const description = form.description.value;
        const maximumNumberOfplaces = form.maximumNumberOfplaces.value;

        // Créez un objet avec les valeurs des champs du formulaire
        const data = {
            nameDestination,
            Dateofdeparture,
            prix,
            description,
            maximumNumberOfplaces,
        };

        try {
            const response = await fetch(`/events/<%= event.id %>`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (!response.ok) {
                throw new Error('Error: ' + response.status);
            }

            const responseData = await response.json();

            // Vérifier si la mise à jour a réussi
            if (responseData && responseData.updateEvent) {
                // Afficher la pop-up SweetAlert2 si la mise à jour réussit
                await Swal.fire({
                    icon: 'success',
                    title: 'Mise à jour réussie',
                    text: 'L\'événement a été mis à jour avec succès!',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });

                // Rediriger l'utilisateur vers la liste des événements après la mise à jour réussie
                window.location.href = '/events';
            }
        } catch (error) {
            console.error('Error:', error);
            // Afficher une pop-up SweetAlert2 en cas d'erreur
            await Swal.fire({
                icon: 'error',
                title: 'Erreur lors de la mise à jour',
                text: 'Une erreur est survenue lors de la mise à jour de l\'événement. Veuillez réessayer plus tard.',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'OK'
            });
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        const updateEventForm = document.getElementById('update-event-form');
        updateEventForm.addEventListener('submit', updateEvent);
    });
</script>