<!-- update.ejs -->

<div class="container-fluid py-4">
    <h1>UPDATE</h1>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <form id="update-user-form" action="/users/update/<%= user.id %>" method="POST">
                        <div class="mb-3">
                            <label for="fname" class="form-label">First Name</label>
                            <input type="text" class="form-control" id="fname" name="Fname" value="<%= user.Fname %>" placeholder="Enter first name">
                        </div>
                        <div class="mb-3">
                            <label for="lname" class="form-label">Last Name</label>
                            <input type="text" class="form-control" id="lname" name="Lname" value="<%= user.Lname %>" placeholder="Enter last name">
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone Number</label>
                            <input type="text" class="form-control" id="phone" name="phone_number" value="<%= user.phone_number %>" placeholder="Enter phone number">
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>" placeholder="Enter email">
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" class="form-control" id="password" name="password" placeholder="Enter password">
                        </div>
                        <div class="mb-3">
                            <label for="role" class="form-label">Role</label>
                            <select class="form-control" id="role" name="role">
                                <option value="Admin" <%= user.role === 'Admin' ? 'selected' : '' %>>Admin</option>
                                <option value="User" <%= user.role === 'User' ? 'selected' : '' %>>User</option>
                                <option value="Organisateur" <%= user.role === 'Organisateur' ? 'selected' : '' %>>Organisateur</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="carPicture" class="form-label">Photo de la voiture</label>
                            <% if (user.car && user.car.carPicture) { %>
                                <!-- Afficher la photo de la voiture si l'utilisateur a ajouté une voiture -->
                                <img src="<%= user.car.carPicture %>" alt="Photo de la voiture" style="max-width: 200px;">
                            <% } else { %>
                                <!-- Afficher un message si l'utilisateur n'a pas ajouté de voiture -->
                                <p>Aucune photo de voiture disponible pour cet utilisateur.</p>
                            <% } %>
                        </div>
                        <button type="submit" class="btn btn-primary">Update User</button>
                    </form>
                    
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.7/dist/sweetalert2.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.15.7/dist/sweetalert2.min.css">

<script>
    document.getElementById('update-user-form').addEventListener('submit', async function(event) {
        event.preventDefault();

        const form = event.target;
        const formData = new FormData(form);

        const userId = '<%= user.id %>'; // Récupérer l'ID de l'utilisateur depuis les données passées par le serveur

        try {
            const response = await fetch(`http://127.0.0.1:3000/api/users/${userId}`, {
                method: 'PUT',
                body: formData
            });

            if (!response.ok) {
                throw new Error('Error: ' + response.status);
            }

            const data = await response.json();
            

            // Vérifier si la mise à jour a réussi
            if (data && data.updateUser) {
                // Afficher la pop-up SweetAlert2 si la mise à jour réussit
                await Swal.fire({
                    icon: 'success',
                    title: 'Mise à jour réussie',
                    text: 'L\'utilisateur a été mis à jour avec succès!',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });

                // Rediriger l'utilisateur vers la liste des utilisateurs
                window.location.href = '/users';
            }
        } catch (error) {
            console.error('Error:', error);
            // Afficher une pop-up SweetAlert2 en cas d'erreur
            await Swal.fire({
                icon: 'error',
                title: 'Erreur lors de la mise à jour',
                text: 'Une erreur est survenue lors de la mise à jour de l\'utilisateur. Veuillez réessayer plus tard.',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'OK'
            });
        }
    });
</script>
